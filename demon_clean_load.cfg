###################################################
#######>>>>>>>>>>  3DPrintDemon  <<<<<<<<<<<#######
#######   https://github.com/3DPrintDemon   #######

# IF YOU USE & LIKE THESE MACROS PLEASE CONSIDER SUPPORTING MY EFFORTS AT 
# https://www.https://ko-fi.com/3dprintdemon

# Macro set includes all NEW fully automated LOAD/UNLOAD_CLEAN macros for one click loading & unloading followed 
# by nozzle cleaning & cooldown, customise all macros via variables, plus selectable temps & load speeds!

# CHECK YOUR VALUES ARE CORRECT BEFORE USE, THIS IS VITAL & TOTALLY ON YOU!

# DO NOT BLINDLY USE THESE DEFAULTS!!

# USE THESE MACROS AT OWN RISK! 

# DONT CRY TO ME IF YOU DIDN'T CHECK/CHANGE VALUES & YOU BREAK THINGS!

[gcode_macro LOAD_FILAMENT]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set ceal = printer["gcode_macro CUSTOM_EXPANSION_ACTIVE_LIST"] %}
  {% set speed = params.SPEED_MMsec|default(7)|float * 60 %}
  {% set temp = params.TEMP|default(250)|int %}
  {% set cool = params.COOL|default('No')|string %}
  {% set cool_temp = params.COOL_TEMP|default(160)|int %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity * 60 %}

  _MAX_EXTRUDE_CHECK
  SAVE_GCODE_STATE NAME=load_state
  _ENCODER_FEED_CHECK_PREP
  M400

  _CUSTOM_PRE_LOAD {rawparams}

  {% if printer.print_stats.state not in ['printing', 'paused'] %} #and (printer.extruder.target <= printer.configfile.settings['extruder'].min_extrude_temp) %}
    SET_DISPLAY_TEXT MSG="Load hotend heating..."
    RESPOND TYPE=COMMAND MSG="Load hotend heating..."
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp} 
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp|int -2} MAXIMUM={temp|int + 5}
    M117
  {% endif %}
     
  M83
  G92 E0
  G1 E{start_vars.load_length} F{max_velocity}
  M400
  _ENCODER_FEED_CHECK
      
  G1 E{start_vars.load_purge_length} F{speed}

  {% if cool|lower in ['yes', 'true'] %}
    {% if printer.print_stats.state not in ['printing', 'paused'] and (temp >= printer.configfile.settings['extruder'].min_extrude_temp) %}
      SET_DISPLAY_TEXT MSG="Post load hotend cooling..."
      RESPOND TYPE=COMMAND MSG="Post load hotend cooling..."
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={cool_temp} 
      # {% if printer.extruder.target >= 50|int %}
      #   TEMPERATURE_WAIT SENSOR=extruder MINIMUM={cool_temp|int -2} MAXIMUM={cool_temp|int + 5}
      # {% endif %}
      M117
    {% elif printer.print_stats.state in ['printing', 'paused'] %}
      SET_DISPLAY_TEXT MSG="Load cooling denied, print in progress!"
      RESPOND TYPE=COMMAND MSG="Load cooling denied, print in progress!"
    {% endif %} 
  {% endif %}

  _CUSTOM_POST_LOAD {rawparams}

  RESTORE_GCODE_STATE NAME=load_state


[gcode_macro _CUSTOM_PRE_LOAD]
gcode:


[gcode_macro _CUSTOM_POST_LOAD]
gcode:


[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set ceal = printer["gcode_macro CUSTOM_EXPANSION_ACTIVE_LIST"] %}
  {% set speed = params.SPEED_MMsec|default(7)|float * 60 %}
  {% set temp = params.TEMP|default(250)|int %}
  {% set cool = params.COOL|default('No')|string %}
  {% set cool_temp = params.COOL_TEMP|default(160)|int %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity * 60 %}

  _MAX_EXTRUDE_CHECK
    
  SAVE_GCODE_STATE NAME=unload_state

  _ENCODER_FEED_CHECK_PREP
  M400

  _CUSTOM_PRE_UNLOAD {rawparams}

  {% if printer.print_stats.state not in ['printing', 'paused'] %} #and (printer.extruder.target <= printer.configfile.settings['extruder'].min_extrude_temp) %}
    SET_DISPLAY_TEXT MSG="Unload hotend heating..."
    RESPOND TYPE=COMMAND MSG="Unload hotend heating..."
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp} 
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp|int -2} MAXIMUM={temp|int + 5}
    M117
  {% endif %}

  M83
  G92 E0
  G1 E{start_vars.unload_purge_length} F{speed}
  M400
  _ENCODER_FEED_CHECK
  G1 E-5 F{max_velocity}
  G4 P8000
    
  G1 E-{start_vars.unload_length} F{max_velocity}

  {% if cool|lower in ['yes', 'true'] %}
    {% if printer.print_stats.state not in ['printing', 'paused'] and (temp >= printer.configfile.settings['extruder'].min_extrude_temp) %}
      SET_DISPLAY_TEXT MSG="Post unload hotend cooling..."
      RESPOND TYPE=COMMAND MSG="Post unload hotend cooling..."
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={cool_temp} 
      # {% if printer.extruder.target >= 50|int %}
      #   TEMPERATURE_WAIT SENSOR=extruder MINIMUM={cool_temp|int -2} MAXIMUM={cool_temp|int + 5}
      # {% endif %}
      M117
    {% elif printer.print_stats.state in ['printing', 'paused'] %}
      SET_DISPLAY_TEXT MSG="Unload cooling denied, print in progress!"
      RESPOND TYPE=COMMAND MSG="Unload cooling denied, print in progress!"
    {% endif %} 
  {% endif %}

  _CUSTOM_POST_UNLOAD {rawparams}
    
  RESTORE_GCODE_STATE NAME=unload_state


[gcode_macro _CUSTOM_PRE_UNLOAD]
gcode:


[gcode_macro _CUSTOM_POST_UNLOAD]
gcode:


[gcode_macro CLEAN_NOZZLE]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set clean_vars = printer["gcode_macro _CLEAN_VARIABLES"] %}
    
  {% if clean_vars.have_you_set_this_up != True %}
    {action_raise_error("This error is caused by you not setting up this feature before first use. Check demon_user_settings file & set this feature up correctly for your printer!")}
  {% else %}
    {% if start_vars.nozzle_cleaner == True %}
      G90
      M83
      _CONDITIONAL_HOME

      SET_DISPLAY_TEXT MSG="Cleaning Nozzle" 
      RESPOND TYPE=COMMAND MSG="Cleaning Nozzle" 

      {% if start_vars.neopixel_led == True %}
        STATUS_CLEANING
      {% endif %}
    
      {% if clean_vars.random_clean_x == False and clean_vars.random_clean_y == False %}
        G0 X{clean_vars.linear_clean_start_x} Y{clean_vars.linear_clean_start_y} F{clean_vars.clean_travel_speed * 60|int}
        G0 Z{clean_vars.linear_clean_start_z} F4000
        M400
        {% if clean_vars.linear_clean_axis in ['X', 'x']|string %}
          {% for passes in range(1, (clean_vars.linear_pass_count)) %}
            _LINEAR_STEP_CONTROL_X
          {% endfor %}
        {% elif clean_vars.linear_clean_axis in ['Y', 'y']|string %}
          {% for passes in range(1, (clean_vars.linear_pass_count)) %}
            _LINEAR_STEP_CONTROL_Y
          {% endfor %}
        {% endif %}
      {% elif clean_vars.random_clean_x == True or clean_vars.random_clean_y == True %}

        G0 X{clean_vars.start_x} Y{clean_vars.start_y} F{clean_vars.clean_travel_speed * 60|int}
        G0 Z{clean_vars.start_z} F4000
        M400
      
        {% for passes in range(1, (clean_vars.pass_count)) %}
          _step_control
        {% endfor %}
      {% endif %}

      G0 Z{clean_vars.park_z} F4000
      {% if printer.print_stats.state != 'printing' %}
        G0 X{clean_vars.end_position_x} Y{clean_vars.end_position_y}
        G0 X{clean_vars.park_x} Y{clean_vars.park_y} Z{clean_vars.park_z} F4000
      {% endif %}
      M117
      M400
      {% if start_vars.neopixel_led == True %}
        STATUS_READY
      {% endif %}
      _SAVE
    {% else %}
      {action_raise_error("This error is caused by the nozzle_cleaner variable not being enabled, check the demon_user_settings file!")}
    {% endif %}
  {% endif %}


[gcode_macro LOAD_CLEAN]
gcode:  
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set clean_vars = printer["gcode_macro _CLEAN_VARIABLES"] %}
  {% set ceal = printer["gcode_macro CUSTOM_EXPANSION_ACTIVE_LIST"] %}
  {% set temp = params.TEMP|default(250)|float %}
  {% set speed = params.SPEED_MMsec|default(7)|float * 60 %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity * 60 %}

  _MAX_EXTRUDE_CHECK
    
  {% if clean_vars.have_you_set_this_up != True %}
    {action_raise_error("This error is caused by you not setting up this feature before first use. Check demon_user_settings file & set this feature up correctly for your printer!")}
  {% elif printer.print_stats.state in ['printing', 'paused'] %}
    RESPOND TYPE=error MSG="Request denied, current printer state is printing/paused"
  {% else %}
    {% if start_vars.nozzle_cleaner == True and start_vars.purge_bucket == True %}
      SAVE_GCODE_STATE NAME=load_clean_state
      _RUNOUT_SENSOR_CHECK
      M400

      _CUSTOM_PRE_LOAD_CLEAN {rawparams}

      {% if start_vars.neopixel_led == True %}
        STATUS_HEATING
      {% endif %}
    
      M117 HEATING...
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={clean_vars.nozzle_pre_temp}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={clean_vars.nozzle_pre_temp - 5} MAXIMUM={clean_vars.nozzle_pre_temp + 50}

      _CONDITIONAL_HOME

      G90
      M83
      {% if start_vars.neopixel_led == True %}
        STATUS_READY
      {% endif %}
 
      {% if printer.toolhead.position.z|float < 20 %}
        G0 Z20 F3600
      {% endif %}
  
      _random_spot
      G0 Z{clean_vars.purge_z_park} F3000                      # park to purge
      M400
      M117 Heating to Load...
      {% if start_vars.neopixel_led == True %}
        STATUS_HEATING
      {% endif %}

      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp - 2} MAXIMUM={temp + 5}
    
      M106 S255                                                # Fans to max.
      M117 LOADING.....
      {% if start_vars.neopixel_led == True %}
        STATUS_PRINTING
      {% endif %}

      _ENCODER_FEED_CHECK_PREP
  
      G92 E0                                                   # reset extruder
      G1 E{clean_vars.load_clean_load_dist} F{max_velocity}   # Max extrude only speed 
      M400

      _ENCODER_FEED_CHECK
  
      G1 E{clean_vars.load_clean_purge_dist} F{speed}                    # fast purge
      G4 P10000
   
      _random_spot

      M107                                                     # fans off
      # M106 S255                                                # Fans to max.
      G1 E-5 F300                                              # slow retract 
      G4 P10000
   
      _random_spot

      M106 S255                                                # Fans to max.
    
      M400                                                     # wait for all moves to complete 
      M117 Post Load Cooling...
      {% if start_vars.neopixel_led == True %}
        STATUS_HEATING
      {% endif %}
   
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={clean_vars.nozzle_post_temp}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={clean_vars.nozzle_post_temp - 5} MAXIMUM={clean_vars.nozzle_post_temp + 10}
      _random_spot
   
      M107                                                     # fans off
      M118 WARNING Nozzle Cleaning 5 Seconds...
      M117 WARNING Nozzle Cleaning 5 Seconds...
      G4 P5000                                                 # 5 second wait
      M118 Nozzle Cleaning...
      M117 Nozzle Cleaning...
      CLEAN_NOZZLE
    
      M400
      M117

      SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
      {% if start_vars.neopixel_led == True %}
        STATUS_READY
      {% endif %}

      {% if start_vars.runout_sensor == True %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
      {% endif %}

      _CUSTOM_POST_LOAD_CLEAN {rawparams}

      RESTORE_GCODE_STATE NAME=load_clean_state
      _SAVE

    {% else %}
      {action_raise_error("This error is caused by the nozzle_cleaner & purge_bucket both not being enabled Check demon_user_settings file!")}
    {% endif %}
  {% endif %}


[gcode_macro _CUSTOM_PRE_LOAD_CLEAN]
gcode:


[gcode_macro _CUSTOM_POST_LOAD_CLEAN]
gcode:


[gcode_macro UNLOAD_CLEAN]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set clean_vars = printer["gcode_macro _CLEAN_VARIABLES"] %}
  {% set ceal = printer["gcode_macro CUSTOM_EXPANSION_ACTIVE_LIST"] %}
  {% set temp = params.TEMP|default(250)|float %}
  {% set speed = params.SPEED_MMsec|default(7)|float * 60 %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity * 60 %}

  _MAX_EXTRUDE_CHECK

  {% if clean_vars.have_you_set_this_up != True %}
    {action_raise_error("This error is caused by you not setting up this feature before first use. Check demon_user_settings file & set this feature up correctly for your printer!")}
  {% elif printer.print_stats.state in ['printing', 'paused'] %}
    RESPOND TYPE=error MSG="Request denied, current printer state is printing/paused"
  {% else %}
    {% if start_vars.nozzle_cleaner == True and start_vars.purge_bucket == True %}
      SAVE_GCODE_STATE NAME=unload_clean_state
      _RUNOUT_SENSOR_CHECK
      M400

      _CUSTOM_PRE_LOAD_CLEAN {rawparams}

      {% if start_vars.neopixel_led == True %}
        STATUS_HEATING
      {% endif %}
    
      M117 HEATING...
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={clean_vars.nozzle_pre_temp}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={clean_vars.nozzle_pre_temp - 5} MAXIMUM={clean_vars.nozzle_pre_temp + 50}
    
      _CONDITIONAL_HOME

      {% if start_vars.runout_sensor == True %}
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
      {% endif %}
  
      G90
      M83
      {% if start_vars.neopixel_led == True %}
        STATUS_READY
      {% endif %}  

      {% if printer.toolhead.position.z|float < 20 %}
        G0 Z20 F3600
      {% endif %}  
  
      _random_spot
      G0 Z{clean_vars.purge_z_park} F3000                      # park to purge
      M400
      M117 Heating to Unload...
      {% if start_vars.neopixel_led == True %}
        STATUS_HEATING
      {% endif %}  
    
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp - 2} MAXIMUM={temp + 5}

      M117 UNLOADING.....
      {% if start_vars.neopixel_led == True %}
        STATUS_PRINTING
      {% endif %}

      _ENCODER_FEED_CHECK_PREP
    
      G92 E0                                                   # reset extruder
      G1 E{clean_vars.unload_clean_purge_dist} F{speed}                        # fast purge 
      M400

      _ENCODER_FEED_CHECK
      
      G4 P5000
      _random_spot
      G1 E-{clean_vars.unload_clean_unload_dist} F{max_velocity}    # Max extrude only speed
      M106 S255                                                # Fans to max.
      G4 P5000
      _random_spot
    
      M400                                                     # wait for all moves to complete 
      M117 Post Unload Cooling...
      {% if start_vars.neopixel_led == True %}
        STATUS_HEATING
      {% endif %}
    
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={clean_vars.nozzle_post_temp}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={clean_vars.nozzle_post_temp - 5} MAXIMUM={clean_vars.nozzle_post_temp + 10}
    
      M107                                                     # fans off
      M118 WARNING Nozzle Cleaning 5 Seconds...
      M117 WARNING Nozzle Cleaning 5 Seconds...
      G4 P5000                                                 # 5 second wait
      M118 Nozzle Cleaning...
      M117 Nozzle Cleaning...
      CLEAN_NOZZLE
    
      M400
      M117
       
      TURN_OFF_HEATERS
      {% if start_vars.neopixel_led == True %}
        STATUS_READY
      {% endif %}

      {% if start_vars.runout_sensor == True %}  
        SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
      {% endif %}

      _CUSTOM_POST_UNLOAD_CLEAN {rawparams}
      
      RESTORE_GCODE_STATE NAME=unload_clean_state
      _SAVE

    {% else %}
      {action_raise_error("This error is caused by the nozzle_cleaner & purge_bucket both not being enabled. Check demon_user_settings file!")}
    {% endif %}
  {% endif %}


[gcode_macro _CUSTOM_PRE_UNLOAD_CLEAN]
gcode:


[gcode_macro _CUSTOM_POST_UNLOAD_CLEAN]
gcode:
